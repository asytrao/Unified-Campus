rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection rules
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        (resource.data.role == 'professor' || resource.data.role == 'student');
    }
    
    // Subjects collection rules
    match /subjects/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor';
      
      match /subjectList/{subjectId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && 
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor';
        
        match /content/{contentId} {
          allow read: if request.auth != null;
          allow write: if request.auth != null && 
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor';
          
          match /submissions/{submissionId} {
            allow read: if request.auth != null && 
              (submissionId == request.auth.uid || 
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor');
            allow write: if request.auth != null && submissionId == request.auth.uid;
          }
        }
      }
    }
    
    // Queries collection rules
    match /queries/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      
      match /subjectList/{subjectId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
        
        match /queries/{queryId} {
          allow read: if request.auth != null;
          allow create: if request.auth != null && 
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
          allow update: if request.auth != null && 
            (resource.data.studentId == request.auth.uid || 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor');
          allow delete: if request.auth != null && 
            (resource.data.studentId == request.auth.uid || 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'professor');
        }
      }
    }
    
    // Communities collection rules
    match /communities/{communityId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
      
      match /messages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.resource.data.senderId == request.auth.uid;
        allow update: if request.auth != null && resource.data.senderId == request.auth.uid;
        allow delete: if request.auth != null && resource.data.senderId == request.auth.uid;
      }
    }
    
    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
